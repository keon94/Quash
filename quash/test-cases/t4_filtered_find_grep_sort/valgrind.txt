==31192== Memcheck, a memory error detector
==31192== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31192== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31192== Command: /home/kamini/EECS678/Project1/Quash/quash/quash
==31192== 
==31385== Invalid read of size 4
==31385==    at 0x4EAFAD0: fileno (fileno.c:35)
==31385==    by 0x40284B: create_process (execute.c:428)
==31385==    by 0x402AF9: run_script (execute.c:503)
==31385==    by 0x401570: main (quash.c:133)
==31385==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==31385== 
==31385== 
==31385== Process terminating with default action of signal 11 (SIGSEGV)
==31385==  Access not within mapped region at address 0x0
==31385==    at 0x4EAFAD0: fileno (fileno.c:35)
==31385==    by 0x40284B: create_process (execute.c:428)
==31385==    by 0x402AF9: run_script (execute.c:503)
==31385==    by 0x401570: main (quash.c:133)
==31385==  If you believe this happened as a result of a stack
==31385==  overflow in your program's main thread (unlikely but
==31385==  possible), you can try to increase the size of the
==31385==  main thread stack using the --main-stacksize= flag.
==31385==  The main thread stack size used in this run was 8388608.
==31385== 
==31385== HEAP SUMMARY:
==31385==     in use at exit: 21,902 bytes in 10 blocks
==31385==   total heap usage: 43 allocs, 33 frees, 34,390 bytes allocated
==31385== 
==31385== 4 bytes in 1 blocks are definitely lost in loss record 2 of 10
==31385==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31385==    by 0x4026E5: create_process (execute.c:384)
==31385==    by 0x402AF9: run_script (execute.c:503)
==31385==    by 0x401570: main (quash.c:133)
==31389== Invalid read of size 4
==31389==    at 0x4EAFAD0: fileno (fileno.c:35)
==31389==    by 0x40284B: create_process (execute.c:428)
==31389==    by 0x402AF9: run_script (execute.c:503)
==31389==    by 0x401570: main (quash.c:133)
==31389==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==31389== 
==31389== 
==31389== Process terminating with default action of signal 11 (SIGSEGV)
==31389==  Access not within mapped region at address 0x0
==31389==    at 0x4EAFAD0: fileno (fileno.c:35)
==31389==    by 0x40284B: create_process (execute.c:428)
==31389==    by 0x402AF9: run_script (execute.c:503)
==31389==    by 0x401570: main (quash.c:133)
==31389==  If you believe this happened as a result of a stack
==31389==  overflow in your program's main thread (unlikely but
==31389==  possible), you can try to increase the size of the
==31389==  main thread stack using the --main-stacksize= flag.
==31389==  The main thread stack size used in this run was 8388608.
==31385== 
==31385== LEAK SUMMARY:
==31385==    definitely lost: 4 bytes in 1 blocks
==31385==    indirectly lost: 0 bytes in 0 blocks
==31385==      possibly lost: 0 bytes in 0 blocks
==31385==    still reachable: 21,898 bytes in 9 blocks
==31385==         suppressed: 0 bytes in 0 blocks
==31385== Reachable blocks (those to which a pointer was found) are not shown.
==31385== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31385== 
==31385== For counts of detected and suppressed errors, rerun with: -v
==31385== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==31389== 
==31389== HEAP SUMMARY:
==31389==     in use at exit: 21,906 bytes in 11 blocks
==31389==   total heap usage: 42 allocs, 31 frees, 34,366 bytes allocated
==31389== 
==31389== 8 bytes in 2 blocks are definitely lost in loss record 3 of 10
==31389==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31389==    by 0x4026E5: create_process (execute.c:384)
==31389==    by 0x402AF9: run_script (execute.c:503)
==31389==    by 0x401570: main (quash.c:133)
==31389== 
==31389== LEAK SUMMARY:
==31389==    definitely lost: 8 bytes in 2 blocks
==31389==    indirectly lost: 0 bytes in 0 blocks
==31389==      possibly lost: 0 bytes in 0 blocks
==31389==    still reachable: 21,898 bytes in 9 blocks
==31389==         suppressed: 0 bytes in 0 blocks
==31389== Reachable blocks (those to which a pointer was found) are not shown.
==31389== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31389== 
==31389== For counts of detected and suppressed errors, rerun with: -v
==31389== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==31381== 
==31381== HEAP SUMMARY:
==31381==     in use at exit: 4 bytes in 1 blocks
==31381==   total heap usage: 43 allocs, 42 frees, 33,862 bytes allocated
==31381== 
==31381== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==31381==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31381==    by 0x4026E5: create_process (execute.c:384)
==31381==    by 0x402AF9: run_script (execute.c:503)
==31381==    by 0x401570: main (quash.c:133)
==31381== 
==31381== LEAK SUMMARY:
==31381==    definitely lost: 4 bytes in 1 blocks
==31381==    indirectly lost: 0 bytes in 0 blocks
==31381==      possibly lost: 0 bytes in 0 blocks
==31381==    still reachable: 0 bytes in 0 blocks
==31381==         suppressed: 0 bytes in 0 blocks
==31381== 
==31381== For counts of detected and suppressed errors, rerun with: -v
==31381== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==31382== 
==31382== HEAP SUMMARY:
==31382==     in use at exit: 8 bytes in 2 blocks
==31382==   total heap usage: 42 allocs, 40 frees, 33,838 bytes allocated
==31382== 
==31382== 8 bytes in 2 blocks are definitely lost in loss record 1 of 1
==31382==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31382==    by 0x4026E5: create_process (execute.c:384)
==31382==    by 0x402AF9: run_script (execute.c:503)
==31382==    by 0x401570: main (quash.c:133)
==31382== 
==31382== LEAK SUMMARY:
==31382==    definitely lost: 8 bytes in 2 blocks
==31382==    indirectly lost: 0 bytes in 0 blocks
==31382==      possibly lost: 0 bytes in 0 blocks
==31382==    still reachable: 0 bytes in 0 blocks
==31382==         suppressed: 0 bytes in 0 blocks
==31382== 
==31382== For counts of detected and suppressed errors, rerun with: -v
==31382== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==31531== Invalid read of size 4
==31531==    at 0x4EAFAD0: fileno (fileno.c:35)
==31531==    by 0x40284B: create_process (execute.c:428)
==31531==    by 0x402AF9: run_script (execute.c:503)
==31531==    by 0x401570: main (quash.c:133)
==31531==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==31531== 
==31531== 
==31531== Process terminating with default action of signal 11 (SIGSEGV)
==31531==  Access not within mapped region at address 0x0
==31531==    at 0x4EAFAD0: fileno (fileno.c:35)
==31531==    by 0x40284B: create_process (execute.c:428)
==31531==    by 0x402AF9: run_script (execute.c:503)
==31531==    by 0x401570: main (quash.c:133)
==31531==  If you believe this happened as a result of a stack
==31531==  overflow in your program's main thread (unlikely but
==31531==  possible), you can try to increase the size of the
==31531==  main thread stack using the --main-stacksize= flag.
==31531==  The main thread stack size used in this run was 8388608.
==31531== 
==31531== HEAP SUMMARY:
==31531==     in use at exit: 21,902 bytes in 10 blocks
==31531==   total heap usage: 43 allocs, 33 frees, 34,390 bytes allocated
==31531== 
==31531== 4 bytes in 1 blocks are definitely lost in loss record 2 of 10
==31531==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31531==    by 0x4026E5: create_process (execute.c:384)
==31531==    by 0x402AF9: run_script (execute.c:503)
==31531==    by 0x401570: main (quash.c:133)
==31531== 
==31531== LEAK SUMMARY:
==31531==    definitely lost: 4 bytes in 1 blocks
==31531==    indirectly lost: 0 bytes in 0 blocks
==31531==      possibly lost: 0 bytes in 0 blocks
==31531==    still reachable: 21,898 bytes in 9 blocks
==31531==         suppressed: 0 bytes in 0 blocks
==31531== Reachable blocks (those to which a pointer was found) are not shown.
==31531== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31531== 
==31531== For counts of detected and suppressed errors, rerun with: -v
==31531== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==31375== 
==31375== HEAP SUMMARY:
==31375==     in use at exit: 4 bytes in 1 blocks
==31375==   total heap usage: 43 allocs, 42 frees, 33,862 bytes allocated
==31375== 
==31375== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1
==31375==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31375==    by 0x4026E5: create_process (execute.c:384)
==31375==    by 0x402AF9: run_script (execute.c:503)
==31375==    by 0x401570: main (quash.c:133)
==31375== 
==31375== LEAK SUMMARY:
==31375==    definitely lost: 4 bytes in 1 blocks
==31375==    indirectly lost: 0 bytes in 0 blocks
==31375==      possibly lost: 0 bytes in 0 blocks
==31375==    still reachable: 0 bytes in 0 blocks
==31375==         suppressed: 0 bytes in 0 blocks
==31375== 
==31375== For counts of detected and suppressed errors, rerun with: -v
==31375== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==31547== Invalid read of size 4
==31547==    at 0x4EAFAD0: fileno (fileno.c:35)
==31547==    by 0x40284B: create_process (execute.c:428)
==31547==    by 0x402AF9: run_script (execute.c:503)
==31547==    by 0x401570: main (quash.c:133)
==31547==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==31547== 
==31547== 
==31547== Process terminating with default action of signal 11 (SIGSEGV)
==31547==  Access not within mapped region at address 0x0
==31547==    at 0x4EAFAD0: fileno (fileno.c:35)
==31547==    by 0x40284B: create_process (execute.c:428)
==31547==    by 0x402AF9: run_script (execute.c:503)
==31547==    by 0x401570: main (quash.c:133)
==31547==  If you believe this happened as a result of a stack
==31547==  overflow in your program's main thread (unlikely but
==31547==  possible), you can try to increase the size of the
==31547==  main thread stack using the --main-stacksize= flag.
==31547==  The main thread stack size used in this run was 8388608.
==31547== 
==31547== HEAP SUMMARY:
==31547==     in use at exit: 21,898 bytes in 9 blocks
==31547==   total heap usage: 44 allocs, 35 frees, 34,414 bytes allocated
==31547== 
==31547== LEAK SUMMARY:
==31547==    definitely lost: 0 bytes in 0 blocks
==31547==    indirectly lost: 0 bytes in 0 blocks
==31547==      possibly lost: 0 bytes in 0 blocks
==31547==    still reachable: 21,898 bytes in 9 blocks
==31547==         suppressed: 0 bytes in 0 blocks
==31547== Reachable blocks (those to which a pointer was found) are not shown.
==31547== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31547== 
==31547== For counts of detected and suppressed errors, rerun with: -v
==31547== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==31192== 
==31192== HEAP SUMMARY:
==31192==     in use at exit: 0 bytes in 0 blocks
==31192==   total heap usage: 44 allocs, 44 frees, 33,886 bytes allocated
==31192== 
==31192== All heap blocks were freed -- no leaks are possible
==31192== 
==31192== For counts of detected and suppressed errors, rerun with: -v
==31192== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
